import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import requests
import time
import sys

# === CONFIGURATION ===
smtp_user = "yaswanthkumarch2001@gmail.com"
smtp_password = "uqjc bszf djfw bsor"  # Use Gmail App Password
to_email = "eshwar@middlewaretalents.com"
public_url = "https://c74d-136-232-205-158.ngrok-free.app"  # Flask server ngrok URL

# === Step 1: Generate a new token ===
try:
    print("üîë Generating approval token...")
    response = requests.post(f"{public_url}/generate_token")
    response.raise_for_status()
    token = response.json()["token"]
    print(f"‚úÖ Token generated: {token}")
except Exception as e:
    print("‚ùå Failed to generate token:", e)
    sys.exit(1)

# Build URLs using the token
status_url = f"{public_url}/status/{token}"
approve_url = f"{public_url}/approve/{token}"
reject_url = f"{public_url}/reject/{token}"

# === Step 2: Compose the email ===
html_body = f"""
<html>
  <head>
    <style>
      body {{
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f5f6fa;
        margin: 0;
        padding: 20px;
        color: #333333;
      }}
      .container {{
        max-width: 600px;
        margin: 30px auto; /* center horizontally and add vertical space */
        background-color: #ffffff;
        padding: 25px 30px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        text-align: left; /* make content left aligned */
      }}
      h2 {{
        color: #2f3640;
        margin-bottom: 20px;
        text-align: center; /* heading centered */
      }}
      p {{
        font-size: 16px;
        line-height: 1.5;
        margin-bottom: 20px;
      }}
      .button-container {{
        text-align: center; /* center buttons */
        margin-bottom: 30px;
      }}
      .button {{
        display: inline-block;
        padding: 4px 10px;       /* smaller padding */
        margin: 0 8px;
        font-size: 12px;         /* smaller font */
        font-weight: 600;
        color: #ffffff !important;
        text-decoration: none !important;
        border-radius: 5px;
        transition: background-color 0.3s ease;
      }}
      .approve-button {{
        background-color: #007bff;
        border: 1px solid #007bff;
      }}
      .approve-button:hover {{
        background-color: #0056b3 !important;
        border-color: #0056b3 !important;
      }}
      .reject-button {{
        background-color: #dc3545;
        border: 1px solid #dc3545;
      }}
      .reject-button:hover {{
        background-color: #a71d2a !important;
        border-color: #a71d2a !important;
      }}
      .footer {{
        margin-top: 30px;
        font-size: 13px;
        color: #888888;
        text-align: center;
      }}
      .top-image {{
        max-width: 120px;
        height: auto;
        margin: 0 auto 20px auto;
        display: block;
        border-radius: 8px;
      }}
      .bottom-image {{
        width: 100%;
        height: auto;
        margin-top: 30px;
        margin-bottom: 0;
        border-radius: 8px;
        object-fit: cover;
        display: block;
      }}
    </style>
  </head>
  <body>
    <div class="container">
      <!-- Top image -->
      <img src="https://res.cloudinary.com/dtc3rf1du/image/upload/v1746768920/thumbnail_Outlook-rtnt4ung_lav9tr.png" alt="Company Logo" class="top-image" />

      <h2>Pipeline Deployment Approval Required</h2>
      <p>Dear Manager,</p>
      <p>
        The deployment pipeline requires your approval to proceed to the next stage.
        Kindly review the details and take action by clicking one of the buttons below:
      </p>

      <div class="button-container">
        <a href="{approve_url}" class="button approve-button" target="_blank" rel="noopener noreferrer">Approve ‚úÖ</a>
        <a href="{reject_url}" class="button reject-button" target="_blank" rel="noopener noreferrer">Reject ‚ùå</a>
      </div>

      <p class="footer">
        If you did not expect this request or have any questions, please contact the CI/CD administrator.
      </p>

      <!-- Bottom image -->
      <img src="https://res.cloudinary.com/dtc3rf1du/image/upload/v1746786795/1745938662031_mnpq0d.jpg" alt="Footer Banner" class="bottom-image" />

      <p class="footer">
        &copy; {time.strftime('%Y')} Continuous Integration Bot
      </p>
    </div>
  </body>
</html>
"""


subject = "Harness Pipeline Approval Needed"

msg = MIMEMultipart('alternative')
msg['From'] = smtp_user
msg['To'] = to_email
msg['Subject'] = subject
msg.attach(MIMEText(html_body, 'html'))

# === Step 3: Send the email ===
try:
    print("üìß Sending approval email...")
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.starttls()
    server.login(smtp_user, smtp_password)
    server.sendmail(smtp_user, to_email, msg.as_string())
    server.quit()
    print("‚úÖ Email sent.")
except Exception as e:
    print("‚ùå Failed to send email:", e)
    sys.exit(1)

# === Step 4: Poll for approval decision ===
print("‚è≥ Waiting for approval (10 minutes max)...")
for i in range(60):  # 60 * 10 seconds = 10 minutes
    try:
        res = requests.get(status_url)
        res.raise_for_status()
        status = res.json().get("status", "").lower()

        if status in ["approved", "rejected"]:
            print(f"üîî Pipeline {status.upper()} received.")
            if status == "approved":
                print("‚úÖ Proceeding to next stage...")
                sys.exit(0)
            else:
                print("üõë Pipeline rejected. Aborting stage.")
                sys.exit(1)
        else:
            print(f"‚åõ Current status: {status}. Waiting...")

    except Exception as err:
        print(f"‚ö†Ô∏è Poll attempt {i+1}/60 failed:", err)

    time.sleep(10)

# === Step 5: Timeout fallback ===
print("‚åõ Approval timeout. Aborting.")
sys.exit(1)
